{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\naman\\\\Downloads\\\\NAMAN\\\\energy_aware_scheduler\\\\web_dashboard\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport NodeStatus from './NodeStatus';\nimport TaskDetails from './TaskDetails';\nimport TelemetryCharts from './TelemetryCharts';\nimport ProjectOverview from './ProjectOverview';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [scheduleData, setScheduleData] = useState(null);\n  const [nodes, setNodes] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [telemetryData, setTelemetryData] = useState([]);\n  const [error, setError] = useState(null);\n  const [selectedTab, setSelectedTab] = useState('overview');\n  useEffect(() => {\n    fetch('http://localhost:5000/api/scheduling_decisions').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => setScheduleData(data)).catch(error => setError(error.message));\n  }, []);\n  useEffect(() => {\n    fetch('http://localhost:5000/api/nodes').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => setNodes(data)).catch(error => setError(error.message));\n  }, []);\n  useEffect(() => {\n    fetch('http://localhost:5000/api/tasks').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => setTasks(data)).catch(error => setError(error.message));\n  }, []);\n  useEffect(() => {\n    fetch('http://localhost:5000/api/telemetry').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => setTelemetryData(data)).catch(error => setError(error.message));\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error fetching data: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }, this);\n  }\n  if (selectedTab !== 'overview' && (!scheduleData || nodes.length === 0 || tasks.length === 0 || telemetryData.length === 0)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Energy-Aware Scheduler Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedTab('overview'),\n        children: \"Project Overview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedTab('scheduling'),\n        children: \"Scheduling Decisions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedTab('nodes'),\n        children: \"Node Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedTab('tasks'),\n        children: \"Task Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedTab('telemetry'),\n        children: \"Telemetry Charts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [selectedTab === 'overview' && /*#__PURE__*/_jsxDEV(ProjectOverview, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 40\n      }, this), selectedTab === 'scheduling' && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: scheduleData && scheduleData.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Task \", item.taskId, \" assigned to Node \", item.nodeId, \" - Energy: \", item.energy, \"W, Temp: \", item.temperature, \"\\xB0C\"]\n        }, item.taskId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), selectedTab === 'nodes' && /*#__PURE__*/_jsxDEV(NodeStatus, {\n        nodes: nodes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 37\n      }, this), selectedTab === 'tasks' && /*#__PURE__*/_jsxDEV(TaskDetails, {\n        tasks: tasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 37\n      }, this), selectedTab === 'telemetry' && /*#__PURE__*/_jsxDEV(TelemetryCharts, {\n        telemetryData: telemetryData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GqYZcJAqvFMIpKqUwZbmfjBgEM0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","NodeStatus","TaskDetails","TelemetryCharts","ProjectOverview","jsxDEV","_jsxDEV","App","_s","scheduleData","setScheduleData","nodes","setNodes","tasks","setTasks","telemetryData","setTelemetryData","error","setError","selectedTab","setSelectedTab","fetch","then","response","ok","Error","json","data","catch","message","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","map","item","taskId","nodeId","energy","temperature","_c","$RefreshReg$"],"sources":["C:/Users/naman/Downloads/NAMAN/energy_aware_scheduler/web_dashboard/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport NodeStatus from './NodeStatus';\r\nimport TaskDetails from './TaskDetails';\r\nimport TelemetryCharts from './TelemetryCharts';\r\nimport ProjectOverview from './ProjectOverview';\r\n\r\nfunction App() {\r\n  const [scheduleData, setScheduleData] = useState(null);\r\n  const [nodes, setNodes] = useState([]);\r\n  const [tasks, setTasks] = useState([]);\r\n  const [telemetryData, setTelemetryData] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [selectedTab, setSelectedTab] = useState('overview');\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:5000/api/scheduling_decisions')\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => setScheduleData(data))\r\n      .catch((error) => setError(error.message));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:5000/api/nodes')\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => setNodes(data))\r\n      .catch((error) => setError(error.message));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:5000/api/tasks')\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => setTasks(data))\r\n      .catch((error) => setError(error.message));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:5000/api/telemetry')\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => setTelemetryData(data))\r\n      .catch((error) => setError(error.message));\r\n  }, []);\r\n\r\n  if (error) {\r\n    return <div>Error fetching data: {error}</div>;\r\n  }\r\n\r\n  if (\r\n    (selectedTab !== 'overview') &&\r\n    (!scheduleData || nodes.length === 0 || tasks.length === 0 || telemetryData.length === 0)\r\n  ) {\r\n    return <div>Loading data...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Energy-Aware Scheduler Dashboard</h1>\r\n      <nav>\r\n        <button onClick={() => setSelectedTab('overview')}>Project Overview</button>\r\n        <button onClick={() => setSelectedTab('scheduling')}>Scheduling Decisions</button>\r\n        <button onClick={() => setSelectedTab('nodes')}>Node Status</button>\r\n        <button onClick={() => setSelectedTab('tasks')}>Task Details</button>\r\n        <button onClick={() => setSelectedTab('telemetry')}>Telemetry Charts</button>\r\n      </nav>\r\n      <div>\r\n        {selectedTab === 'overview' && <ProjectOverview />}\r\n        {selectedTab === 'scheduling' && (\r\n          <ul>\r\n            {scheduleData && scheduleData.map((item) => (\r\n              <li key={item.taskId}>\r\n                Task {item.taskId} assigned to Node {item.nodeId} - Energy: {item.energy}W, Temp: {item.temperature}°C\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n        {selectedTab === 'nodes' && <NodeStatus nodes={nodes} />}\r\n        {selectedTab === 'tasks' && <TaskDetails tasks={tasks} />}\r\n        {selectedTab === 'telemetry' && <TelemetryCharts telemetryData={telemetryData} />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}